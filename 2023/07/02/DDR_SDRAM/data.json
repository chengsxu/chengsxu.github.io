{"title":"DDR SDRAM","date":"2023-07-02T05:06:32.692Z","source":"_posts/DDR_SDRAM.md","raw":"---\ntitle: DDR SDRAM\ndate: 2023-07-02 13:06:32.692\nupdated: 2023-07-02 13:10:50.232\ncategories: \ntags: \n- linux\n---\nDDR SDRAM\n<!-- more -->\n# DDR SDRAM\n\n## 特性\n\n- SDRAM:  synchronous dynamic random-access memor\n- SRAM: Static random-access memor\n- DRAM 存储采用单个电容比 SRAM采用晶体管面积更占优势（SRAM 1-4M）\n- SRAM由于是芯片内部小电容掉电较快，需要cpu提供同步信号（synchronous）增加了控制器的复杂性\n- DDR ：Double Data Rate 提高内存速度\n\n\n\n## DRAM结构\n\n组成：Array、Bank、Memory Device、Rank、DIMM(Dual in-line memory module)\n\n### Array\n\n![01](DDR_SDRAM/01.png)\n\n### Bank\n\n![02](DDR_SDRAM/02.png)\n\n### Memory Device、Rank、DIMM\n\n![03](DDR_SDRAM/03.png)\n\n多Bank目的是为了交叉充电\n\n ## 读写操作时序\n\n### CAS/RAS参数意义\n\n![04](DDR_SDRAM/04.png)\n\n- RAS: row address strobe\n- CAS: column address strobe\n- DQ：Data Bus数据线\n- DM：Data Mask 当写入操作时，在DM信号有效时写入DQ数据。\n\n### DRAM操作时许演变对比\n\n![05](DDR_SDRAM/05.png)\n\nFPAM：FAST Page Module 根据局部性原理，行地址不需要经常根本更换，速度翻倍\n\nEDO：Extend Data Out 列地址和数据时间复用，速度翻倍\n\nBEDO：Burst EDO 爆发时EDO模式，芯片内部添加累加器自动计算新地址，不需要每次都给列地址，节约了列地址解码时间，速度增长30%\n\n![06](DDR_SDRAM/06.png)\n\nDLL：Delay Lock Loop 用于DDR外部引脚信号和内部信号不同步进行同步操作\n\n![09](DDR_SDRAM/09.png)\n\n#### DDR Read\n\n20世纪80年代，计算机发展迅速，出现内存和cpu速度不匹配情况，异步此时限制了内存速度的进一步提高，内存又重新回到了同步的通信方式,时钟信号的出现对速率并没有明显提升，但可以通过修改时钟频率提升了内存的适用性。\n\n![07](DDR_SDRAM/07.png)\n\nSDR：采用单个时钟信号传输数据\n\nDDR：采用上升沿和下降沿传输数据，速度翻倍Dual/Duble\n\nCAS-2: CAS到RAS延迟两个周期\n\nDQS：toggle 读数据的时候进行反转，作用不大，和数据线同步\n\n#### DDR Write\n\n![08](DDR_SDRAM/08.png)\n\nDQS：在DDR中通知芯片可以进行数据锁存，进行数据写操作，比数据线晚半个周期\n\nDQS对应着DATA数据线，所以在芯片电路设计中，并不能复用\n\nDQS 采用差分信号避免并行数据线中的干扰\n\n\n\nCKE:时钟使能 nWE：读写操作标记 ODT：决定是否启动内部上下拉电阻降低频率高导致集电容效应影响信号质量\n\n## 内存时序关键参数\n\n![10](DDR_SDRAM/10.png)\n\n### Read四个阶段 \n\nPrecharge Access Sense Restore\n\nTrcd: Row to Col Delay\n\nTras: Row access Stroke \n\nTrp: Row Precharge\n\n![11](DDR_SDRAM/11.png)\n\n### Write四个阶段\n\nAccess Sense Restore Precharge\n\nTrcd：Row Column Delay\n\nTwr：Write Delay\n\nTrp: Row Precharge\n\n![12](DDR_SDRAM/12.png)\n\n### SDR和DDR对比\n\nDDR不断迭代过程频率不断提高，但其中控制逻辑的速度并没有提高（Trcd Tras没有显著改变），只是提高BANK读取的位数，拓展了带宽\n\n![13](DDR_SDRAM/13.png)\n\n### 读写操作时间参数\n\nread\n\n![14](DDR_SDRAM/14.png)\n\nwrite\n\n![16](DDR_SDRAM/16.png)\n\nrefresh\n\n此处的Trc和读写的Trc不同，refresh会同时刷新多个行\n\n![17](DDR_SDRAM/17.png)\n\nTrrd Tfaw\n\n![18](DDR_SDRAM/18.png)\n\n参数列表：\n\nTrefi = bank最低刷时间/刷新bank行次数\n\n![15](DDR_SDRAM/15.png)\n","slug":"DDR_SDRAM","published":true,"updated":"2023-07-02T05:10:50.232Z","_id":"cm833960b0001i0q640glfn6o","comments":true,"layout":"post","photos":[],"html":"<p>DDR SDRAM</p>\n<span id=\"more\"></span>\n<h1 id=\"DDR-SDRAM\"><a href=\"#DDR-SDRAM\" class=\"headerlink\" title=\"DDR SDRAM\"></a>DDR SDRAM</h1><h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>SDRAM:  synchronous dynamic random-access memor</li>\n<li>SRAM: Static random-access memor</li>\n<li>DRAM 存储采用单个电容比 SRAM采用晶体管面积更占优势（SRAM 1-4M）</li>\n<li>SRAM由于是芯片内部小电容掉电较快，需要cpu提供同步信号（synchronous）增加了控制器的复杂性</li>\n<li>DDR ：Double Data Rate 提高内存速度</li>\n</ul>\n<h2 id=\"DRAM结构\"><a href=\"#DRAM结构\" class=\"headerlink\" title=\"DRAM结构\"></a>DRAM结构</h2><p>组成：Array、Bank、Memory Device、Rank、DIMM(Dual in-line memory module)</p>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><p><img src=\"/2023/07/02/DDR_SDRAM/01.png\" alt=\"01\"></p>\n<h3 id=\"Bank\"><a href=\"#Bank\" class=\"headerlink\" title=\"Bank\"></a>Bank</h3><p><img src=\"/2023/07/02/DDR_SDRAM/02.png\" alt=\"02\"></p>\n<h3 id=\"Memory-Device、Rank、DIMM\"><a href=\"#Memory-Device、Rank、DIMM\" class=\"headerlink\" title=\"Memory Device、Rank、DIMM\"></a>Memory Device、Rank、DIMM</h3><p><img src=\"/2023/07/02/DDR_SDRAM/03.png\" alt=\"03\"></p>\n<p>多Bank目的是为了交叉充电</p>\n<h2 id=\"读写操作时序\"><a href=\"#读写操作时序\" class=\"headerlink\" title=\"读写操作时序\"></a>读写操作时序</h2><h3 id=\"CAS-RAS参数意义\"><a href=\"#CAS-RAS参数意义\" class=\"headerlink\" title=\"CAS&#x2F;RAS参数意义\"></a>CAS&#x2F;RAS参数意义</h3><p><img src=\"/2023/07/02/DDR_SDRAM/04.png\" alt=\"04\"></p>\n<ul>\n<li>RAS: row address strobe</li>\n<li>CAS: column address strobe</li>\n<li>DQ：Data Bus数据线</li>\n<li>DM：Data Mask 当写入操作时，在DM信号有效时写入DQ数据。</li>\n</ul>\n<h3 id=\"DRAM操作时许演变对比\"><a href=\"#DRAM操作时许演变对比\" class=\"headerlink\" title=\"DRAM操作时许演变对比\"></a>DRAM操作时许演变对比</h3><p><img src=\"/2023/07/02/DDR_SDRAM/05.png\" alt=\"05\"></p>\n<p>FPAM：FAST Page Module 根据局部性原理，行地址不需要经常根本更换，速度翻倍</p>\n<p>EDO：Extend Data Out 列地址和数据时间复用，速度翻倍</p>\n<p>BEDO：Burst EDO 爆发时EDO模式，芯片内部添加累加器自动计算新地址，不需要每次都给列地址，节约了列地址解码时间，速度增长30%</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/06.png\" alt=\"06\"></p>\n<p>DLL：Delay Lock Loop 用于DDR外部引脚信号和内部信号不同步进行同步操作</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/09.png\" alt=\"09\"></p>\n<h4 id=\"DDR-Read\"><a href=\"#DDR-Read\" class=\"headerlink\" title=\"DDR Read\"></a>DDR Read</h4><p>20世纪80年代，计算机发展迅速，出现内存和cpu速度不匹配情况，异步此时限制了内存速度的进一步提高，内存又重新回到了同步的通信方式,时钟信号的出现对速率并没有明显提升，但可以通过修改时钟频率提升了内存的适用性。</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/07.png\" alt=\"07\"></p>\n<p>SDR：采用单个时钟信号传输数据</p>\n<p>DDR：采用上升沿和下降沿传输数据，速度翻倍Dual&#x2F;Duble</p>\n<p>CAS-2: CAS到RAS延迟两个周期</p>\n<p>DQS：toggle 读数据的时候进行反转，作用不大，和数据线同步</p>\n<h4 id=\"DDR-Write\"><a href=\"#DDR-Write\" class=\"headerlink\" title=\"DDR Write\"></a>DDR Write</h4><p><img src=\"/2023/07/02/DDR_SDRAM/08.png\" alt=\"08\"></p>\n<p>DQS：在DDR中通知芯片可以进行数据锁存，进行数据写操作，比数据线晚半个周期</p>\n<p>DQS对应着DATA数据线，所以在芯片电路设计中，并不能复用</p>\n<p>DQS 采用差分信号避免并行数据线中的干扰</p>\n<p>CKE:时钟使能 nWE：读写操作标记 ODT：决定是否启动内部上下拉电阻降低频率高导致集电容效应影响信号质量</p>\n<h2 id=\"内存时序关键参数\"><a href=\"#内存时序关键参数\" class=\"headerlink\" title=\"内存时序关键参数\"></a>内存时序关键参数</h2><p><img src=\"/2023/07/02/DDR_SDRAM/10.png\" alt=\"10\"></p>\n<h3 id=\"Read四个阶段\"><a href=\"#Read四个阶段\" class=\"headerlink\" title=\"Read四个阶段\"></a>Read四个阶段</h3><p>Precharge Access Sense Restore</p>\n<p>Trcd: Row to Col Delay</p>\n<p>Tras: Row access Stroke </p>\n<p>Trp: Row Precharge</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/11.png\" alt=\"11\"></p>\n<h3 id=\"Write四个阶段\"><a href=\"#Write四个阶段\" class=\"headerlink\" title=\"Write四个阶段\"></a>Write四个阶段</h3><p>Access Sense Restore Precharge</p>\n<p>Trcd：Row Column Delay</p>\n<p>Twr：Write Delay</p>\n<p>Trp: Row Precharge</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/12.png\" alt=\"12\"></p>\n<h3 id=\"SDR和DDR对比\"><a href=\"#SDR和DDR对比\" class=\"headerlink\" title=\"SDR和DDR对比\"></a>SDR和DDR对比</h3><p>DDR不断迭代过程频率不断提高，但其中控制逻辑的速度并没有提高（Trcd Tras没有显著改变），只是提高BANK读取的位数，拓展了带宽</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/13.png\" alt=\"13\"></p>\n<h3 id=\"读写操作时间参数\"><a href=\"#读写操作时间参数\" class=\"headerlink\" title=\"读写操作时间参数\"></a>读写操作时间参数</h3><p>read</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/14.png\" alt=\"14\"></p>\n<p>write</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/16.png\" alt=\"16\"></p>\n<p>refresh</p>\n<p>此处的Trc和读写的Trc不同，refresh会同时刷新多个行</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/17.png\" alt=\"17\"></p>\n<p>Trrd Tfaw</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/18.png\" alt=\"18\"></p>\n<p>参数列表：</p>\n<p>Trefi &#x3D; bank最低刷时间&#x2F;刷新bank行次数</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/15.png\" alt=\"15\"></p>\n","excerpt":"<p>DDR SDRAM</p>","more":"<h1 id=\"DDR-SDRAM\"><a href=\"#DDR-SDRAM\" class=\"headerlink\" title=\"DDR SDRAM\"></a>DDR SDRAM</h1><h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>SDRAM:  synchronous dynamic random-access memor</li>\n<li>SRAM: Static random-access memor</li>\n<li>DRAM 存储采用单个电容比 SRAM采用晶体管面积更占优势（SRAM 1-4M）</li>\n<li>SRAM由于是芯片内部小电容掉电较快，需要cpu提供同步信号（synchronous）增加了控制器的复杂性</li>\n<li>DDR ：Double Data Rate 提高内存速度</li>\n</ul>\n<h2 id=\"DRAM结构\"><a href=\"#DRAM结构\" class=\"headerlink\" title=\"DRAM结构\"></a>DRAM结构</h2><p>组成：Array、Bank、Memory Device、Rank、DIMM(Dual in-line memory module)</p>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><p><img src=\"/2023/07/02/DDR_SDRAM/01.png\" alt=\"01\"></p>\n<h3 id=\"Bank\"><a href=\"#Bank\" class=\"headerlink\" title=\"Bank\"></a>Bank</h3><p><img src=\"/2023/07/02/DDR_SDRAM/02.png\" alt=\"02\"></p>\n<h3 id=\"Memory-Device、Rank、DIMM\"><a href=\"#Memory-Device、Rank、DIMM\" class=\"headerlink\" title=\"Memory Device、Rank、DIMM\"></a>Memory Device、Rank、DIMM</h3><p><img src=\"/2023/07/02/DDR_SDRAM/03.png\" alt=\"03\"></p>\n<p>多Bank目的是为了交叉充电</p>\n<h2 id=\"读写操作时序\"><a href=\"#读写操作时序\" class=\"headerlink\" title=\"读写操作时序\"></a>读写操作时序</h2><h3 id=\"CAS-RAS参数意义\"><a href=\"#CAS-RAS参数意义\" class=\"headerlink\" title=\"CAS&#x2F;RAS参数意义\"></a>CAS&#x2F;RAS参数意义</h3><p><img src=\"/2023/07/02/DDR_SDRAM/04.png\" alt=\"04\"></p>\n<ul>\n<li>RAS: row address strobe</li>\n<li>CAS: column address strobe</li>\n<li>DQ：Data Bus数据线</li>\n<li>DM：Data Mask 当写入操作时，在DM信号有效时写入DQ数据。</li>\n</ul>\n<h3 id=\"DRAM操作时许演变对比\"><a href=\"#DRAM操作时许演变对比\" class=\"headerlink\" title=\"DRAM操作时许演变对比\"></a>DRAM操作时许演变对比</h3><p><img src=\"/2023/07/02/DDR_SDRAM/05.png\" alt=\"05\"></p>\n<p>FPAM：FAST Page Module 根据局部性原理，行地址不需要经常根本更换，速度翻倍</p>\n<p>EDO：Extend Data Out 列地址和数据时间复用，速度翻倍</p>\n<p>BEDO：Burst EDO 爆发时EDO模式，芯片内部添加累加器自动计算新地址，不需要每次都给列地址，节约了列地址解码时间，速度增长30%</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/06.png\" alt=\"06\"></p>\n<p>DLL：Delay Lock Loop 用于DDR外部引脚信号和内部信号不同步进行同步操作</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/09.png\" alt=\"09\"></p>\n<h4 id=\"DDR-Read\"><a href=\"#DDR-Read\" class=\"headerlink\" title=\"DDR Read\"></a>DDR Read</h4><p>20世纪80年代，计算机发展迅速，出现内存和cpu速度不匹配情况，异步此时限制了内存速度的进一步提高，内存又重新回到了同步的通信方式,时钟信号的出现对速率并没有明显提升，但可以通过修改时钟频率提升了内存的适用性。</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/07.png\" alt=\"07\"></p>\n<p>SDR：采用单个时钟信号传输数据</p>\n<p>DDR：采用上升沿和下降沿传输数据，速度翻倍Dual&#x2F;Duble</p>\n<p>CAS-2: CAS到RAS延迟两个周期</p>\n<p>DQS：toggle 读数据的时候进行反转，作用不大，和数据线同步</p>\n<h4 id=\"DDR-Write\"><a href=\"#DDR-Write\" class=\"headerlink\" title=\"DDR Write\"></a>DDR Write</h4><p><img src=\"/2023/07/02/DDR_SDRAM/08.png\" alt=\"08\"></p>\n<p>DQS：在DDR中通知芯片可以进行数据锁存，进行数据写操作，比数据线晚半个周期</p>\n<p>DQS对应着DATA数据线，所以在芯片电路设计中，并不能复用</p>\n<p>DQS 采用差分信号避免并行数据线中的干扰</p>\n<p>CKE:时钟使能 nWE：读写操作标记 ODT：决定是否启动内部上下拉电阻降低频率高导致集电容效应影响信号质量</p>\n<h2 id=\"内存时序关键参数\"><a href=\"#内存时序关键参数\" class=\"headerlink\" title=\"内存时序关键参数\"></a>内存时序关键参数</h2><p><img src=\"/2023/07/02/DDR_SDRAM/10.png\" alt=\"10\"></p>\n<h3 id=\"Read四个阶段\"><a href=\"#Read四个阶段\" class=\"headerlink\" title=\"Read四个阶段\"></a>Read四个阶段</h3><p>Precharge Access Sense Restore</p>\n<p>Trcd: Row to Col Delay</p>\n<p>Tras: Row access Stroke </p>\n<p>Trp: Row Precharge</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/11.png\" alt=\"11\"></p>\n<h3 id=\"Write四个阶段\"><a href=\"#Write四个阶段\" class=\"headerlink\" title=\"Write四个阶段\"></a>Write四个阶段</h3><p>Access Sense Restore Precharge</p>\n<p>Trcd：Row Column Delay</p>\n<p>Twr：Write Delay</p>\n<p>Trp: Row Precharge</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/12.png\" alt=\"12\"></p>\n<h3 id=\"SDR和DDR对比\"><a href=\"#SDR和DDR对比\" class=\"headerlink\" title=\"SDR和DDR对比\"></a>SDR和DDR对比</h3><p>DDR不断迭代过程频率不断提高，但其中控制逻辑的速度并没有提高（Trcd Tras没有显著改变），只是提高BANK读取的位数，拓展了带宽</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/13.png\" alt=\"13\"></p>\n<h3 id=\"读写操作时间参数\"><a href=\"#读写操作时间参数\" class=\"headerlink\" title=\"读写操作时间参数\"></a>读写操作时间参数</h3><p>read</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/14.png\" alt=\"14\"></p>\n<p>write</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/16.png\" alt=\"16\"></p>\n<p>refresh</p>\n<p>此处的Trc和读写的Trc不同，refresh会同时刷新多个行</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/17.png\" alt=\"17\"></p>\n<p>Trrd Tfaw</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/18.png\" alt=\"18\"></p>\n<p>参数列表：</p>\n<p>Trefi &#x3D; bank最低刷时间&#x2F;刷新bank行次数</p>\n<p><img src=\"/2023/07/02/DDR_SDRAM/15.png\" alt=\"15\"></p>","path":"2023/07/02/DDR_SDRAM/","permalink":"http://chengs.run/2023/07/02/DDR_SDRAM/","tags":[{"name":"linux","_id":"cm833960c0002i0q66dwgd8wg","slug":"linux","path":"tags/linux/","permalink":"http://chengs.run/tags/linux/","length":13}],"categories":[],"prev":{"title":"css样式笔记","date":"2024-11-24T08:03:50.748Z","slug":"css样式笔记","published":true,"updated":"2025-02-22T11:37:16.776Z","_id":"cm833960j000fi0q6fxkjau8v","layout":"post","photos":[],"excerpt":"<p>css样式笔记</p>","path":"2024/11/24/css样式笔记/","permalink":"http://chengs.run/2024/11/24/css%E6%A0%B7%E5%BC%8F%E7%AC%94%E8%AE%B0/","__post":true},"next":{"title":"linux驱动开发(4)","date":"2023-02-27T07:02:13.404Z","slug":"linux驱动开发(4)","published":true,"updated":"2025-03-09T13:14:13.404Z","_id":"cm833960x001di0q6atnvg4ef","layout":"post","photos":[],"excerpt":"<p>设备树基础</p>","path":"2023/02/27/linux驱动开发(4)/","permalink":"http://chengs.run/2023/02/27/linux%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91(4)/","__post":true},"__post":true}