{"title":"linux驱动开发(1)","date":"2023-02-24T06:39:00.931Z","source":"_posts/linux驱动开发(1).md","raw":"---\ntitle: linux驱动开发(1)\ndate: 2023-02-24 14:39:00.931\nupdated: 2023-02-24 14:39:00.931\ncategories: \ntags: \n- linux驱动开发\n- linux\n---\n字符设备驱动开发基础\n<!-- more -->\n\n## 字符设备驱动注册卸载\n```c\nmodule_init(XXX); // 注册模块加载函数\nmodule_exit(XXX); // 注册模块卸载函数\n\nstatic int __init XXX(void);\nstatic int __exit XXX(void);\n```\n## 加载卸载驱动\n```shell\ninsmod xx.ko\nmodprobe xx.ko // more smart\n<!-- 会自动从/lib/modules/内核版本 目录下寻找依赖驱动 \n直接调用会提示can't open 'modules.dep'\n输入depmod 若不存在该命令，则需busybox中加入 -->\n<!-- 创建节点文件 -->\nmknod [-m MODE] NAME TYPE [MAJOR MINOR]\nmknod /dev/chrdevbase.ko c 200 0\n\nrmmod xx.ko\nmodeprobe -r xx.ko // not suggest\n```\n## 字符设备的注册与注销\n```c\nstatic inline int register_chrdev(unsigned int major,const char *name, const struct file_oiperations *fops);\nstatic inline void unregister_chrdev(unsigned int major, const char* name);\n```\n可通过cat /proc/devices命令查看已经被用掉的设备号\n\n## 添加LICENSE和作者信息\n```c\nMODULE_LICENSE()\nMODULE_AUTHOR()\n```\n## 设备号\ndev_t 本质是一个32位的无符号整数，其中高12位为设备号，低20号为次设备号，so 主设备号max 4095。\n```c\nMAJOR(dev)\nMINOR(dev)\nMKDEV(ma, mi)\n```\n### dynamic dev num\n```c\nint alloc_chrdev_region(dev_t* dev, unsigned baseminor, unsigned count, const char* name);\nvoid unregister_chrdev_region(dev_t from, unsigned count);\n```\n## printk\nprintk有八个打印等级，如果不指名，默认采用等级4\n```c\n#inlcude/linux/kern_levels.h\n\n#define KERN_EMERG\tKERN_SOH \"0\"\t/* system is unusable */\n#define KERN_ALERT\tKERN_SOH \"1\"\t/* action must be taken immediately */\n#define KERN_CRIT\tKERN_SOH \"2\"\t/* critical conditions */\n#define KERN_ERR\tKERN_SOH \"3\"\t/* error conditions */\n#define KERN_WARNING\tKERN_SOH \"4\"\t/* warning conditions */\n#define KERN_NOTICE\tKERN_SOH \"5\"\t/* normal but significant condition */\n#define KERN_INFO\tKERN_SOH \"6\"\t/* informational */\n#define KERN_DEBUG\tKERN_SOH \"7\"\t/* debug-level messages */\n\nusage:\nprintk(KERN_EMERG \"gsmi:Log Shutdown Reason\\n\");\n```\n在printk.h中存在宏定义 CONSOLE_LOGLEVEL_DEFAULT 当打印等级比该值高，才会显示在终端上\n\n\n\n","slug":"linux驱动开发(1)","published":true,"updated":"2023-02-24T06:39:00.931Z","_id":"cm833960t0012i0q62bqc6p4r","comments":true,"layout":"post","photos":[],"html":"<p>字符设备驱动开发基础</p>\n<span id=\"more\"></span>\n\n<h2 id=\"字符设备驱动注册卸载\"><a href=\"#字符设备驱动注册卸载\" class=\"headerlink\" title=\"字符设备驱动注册卸载\"></a>字符设备驱动注册卸载</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module_init(XXX); <span class=\"comment\">// 注册模块加载函数</span></span><br><span class=\"line\">module_exit(XXX); <span class=\"comment\">// 注册模块卸载函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __init <span class=\"title function_\">XXX</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __exit <span class=\"title function_\">XXX</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"加载卸载驱动\"><a href=\"#加载卸载驱动\" class=\"headerlink\" title=\"加载卸载驱动\"></a>加载卸载驱动</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insmod xx.ko</span><br><span class=\"line\">modprobe xx.ko // more smart</span><br><span class=\"line\">&lt;!-- 会自动从/lib/modules/内核版本 目录下寻找依赖驱动 </span><br><span class=\"line\">直接调用会提示can&#x27;t open &#x27;modules.dep&#x27;</span><br><span class=\"line\">输入depmod 若不存在该命令，则需busybox中加入 --&gt;</span><br><span class=\"line\">&lt;!-- 创建节点文件 --&gt;</span><br><span class=\"line\">mknod [-m MODE] NAME TYPE [MAJOR MINOR]</span><br><span class=\"line\">mknod /dev/chrdevbase.ko c 200 0</span><br><span class=\"line\"></span><br><span class=\"line\">rmmod xx.ko</span><br><span class=\"line\">modeprobe -r xx.ko // not suggest</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符设备的注册与注销\"><a href=\"#字符设备的注册与注销\" class=\"headerlink\" title=\"字符设备的注册与注销\"></a>字符设备的注册与注销</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title function_\">register_chrdev</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> major,<span class=\"type\">const</span> <span class=\"type\">char</span> *name, <span class=\"type\">const</span> <span class=\"keyword\">struct</span> file_oiperations *fops)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title function_\">unregister_chrdev</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> major, <span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span>;</span><br></pre></td></tr></table></figure>\n<p>可通过cat &#x2F;proc&#x2F;devices命令查看已经被用掉的设备号</p>\n<h2 id=\"添加LICENSE和作者信息\"><a href=\"#添加LICENSE和作者信息\" class=\"headerlink\" title=\"添加LICENSE和作者信息\"></a>添加LICENSE和作者信息</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MODULE_LICENSE()</span><br><span class=\"line\">MODULE_AUTHOR()</span><br></pre></td></tr></table></figure>\n<h2 id=\"设备号\"><a href=\"#设备号\" class=\"headerlink\" title=\"设备号\"></a>设备号</h2><p>dev_t 本质是一个32位的无符号整数，其中高12位为设备号，低20号为次设备号，so 主设备号max 4095。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MAJOR(dev)</span><br><span class=\"line\">MINOR(dev)</span><br><span class=\"line\">MKDEV(ma, mi)</span><br></pre></td></tr></table></figure>\n<h3 id=\"dynamic-dev-num\"><a href=\"#dynamic-dev-num\" class=\"headerlink\" title=\"dynamic dev num\"></a>dynamic dev num</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">alloc_chrdev_region</span><span class=\"params\">(<span class=\"type\">dev_t</span>* dev, <span class=\"type\">unsigned</span> baseminor, <span class=\"type\">unsigned</span> count, <span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">unregister_chrdev_region</span><span class=\"params\">(<span class=\"type\">dev_t</span> from, <span class=\"type\">unsigned</span> count)</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"printk\"><a href=\"#printk\" class=\"headerlink\" title=\"printk\"></a>printk</h2><p>printk有八个打印等级，如果不指名，默认采用等级4</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#inlcude/linux/kern_levels.h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_EMERG\tKERN_SOH <span class=\"string\">&quot;0&quot;</span>\t<span class=\"comment\">/* system is unusable */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_ALERT\tKERN_SOH <span class=\"string\">&quot;1&quot;</span>\t<span class=\"comment\">/* action must be taken immediately */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_CRIT\tKERN_SOH <span class=\"string\">&quot;2&quot;</span>\t<span class=\"comment\">/* critical conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_ERR\tKERN_SOH <span class=\"string\">&quot;3&quot;</span>\t<span class=\"comment\">/* error conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_WARNING\tKERN_SOH <span class=\"string\">&quot;4&quot;</span>\t<span class=\"comment\">/* warning conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_NOTICE\tKERN_SOH <span class=\"string\">&quot;5&quot;</span>\t<span class=\"comment\">/* normal but significant condition */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_INFO\tKERN_SOH <span class=\"string\">&quot;6&quot;</span>\t<span class=\"comment\">/* informational */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_DEBUG\tKERN_SOH <span class=\"string\">&quot;7&quot;</span>\t<span class=\"comment\">/* debug-level messages */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">printk(KERN_EMERG <span class=\"string\">&quot;gsmi:Log Shutdown Reason\\n&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>在printk.h中存在宏定义 CONSOLE_LOGLEVEL_DEFAULT 当打印等级比该值高，才会显示在终端上</p>\n","excerpt":"<p>字符设备驱动开发基础</p>","more":"<h2 id=\"字符设备驱动注册卸载\"><a href=\"#字符设备驱动注册卸载\" class=\"headerlink\" title=\"字符设备驱动注册卸载\"></a>字符设备驱动注册卸载</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module_init(XXX); <span class=\"comment\">// 注册模块加载函数</span></span><br><span class=\"line\">module_exit(XXX); <span class=\"comment\">// 注册模块卸载函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __init <span class=\"title function_\">XXX</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __exit <span class=\"title function_\">XXX</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"加载卸载驱动\"><a href=\"#加载卸载驱动\" class=\"headerlink\" title=\"加载卸载驱动\"></a>加载卸载驱动</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insmod xx.ko</span><br><span class=\"line\">modprobe xx.ko // more smart</span><br><span class=\"line\">&lt;!-- 会自动从/lib/modules/内核版本 目录下寻找依赖驱动 </span><br><span class=\"line\">直接调用会提示can&#x27;t open &#x27;modules.dep&#x27;</span><br><span class=\"line\">输入depmod 若不存在该命令，则需busybox中加入 --&gt;</span><br><span class=\"line\">&lt;!-- 创建节点文件 --&gt;</span><br><span class=\"line\">mknod [-m MODE] NAME TYPE [MAJOR MINOR]</span><br><span class=\"line\">mknod /dev/chrdevbase.ko c 200 0</span><br><span class=\"line\"></span><br><span class=\"line\">rmmod xx.ko</span><br><span class=\"line\">modeprobe -r xx.ko // not suggest</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符设备的注册与注销\"><a href=\"#字符设备的注册与注销\" class=\"headerlink\" title=\"字符设备的注册与注销\"></a>字符设备的注册与注销</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title function_\">register_chrdev</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> major,<span class=\"type\">const</span> <span class=\"type\">char</span> *name, <span class=\"type\">const</span> <span class=\"keyword\">struct</span> file_oiperations *fops)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title function_\">unregister_chrdev</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> major, <span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span>;</span><br></pre></td></tr></table></figure>\n<p>可通过cat &#x2F;proc&#x2F;devices命令查看已经被用掉的设备号</p>\n<h2 id=\"添加LICENSE和作者信息\"><a href=\"#添加LICENSE和作者信息\" class=\"headerlink\" title=\"添加LICENSE和作者信息\"></a>添加LICENSE和作者信息</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MODULE_LICENSE()</span><br><span class=\"line\">MODULE_AUTHOR()</span><br></pre></td></tr></table></figure>\n<h2 id=\"设备号\"><a href=\"#设备号\" class=\"headerlink\" title=\"设备号\"></a>设备号</h2><p>dev_t 本质是一个32位的无符号整数，其中高12位为设备号，低20号为次设备号，so 主设备号max 4095。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MAJOR(dev)</span><br><span class=\"line\">MINOR(dev)</span><br><span class=\"line\">MKDEV(ma, mi)</span><br></pre></td></tr></table></figure>\n<h3 id=\"dynamic-dev-num\"><a href=\"#dynamic-dev-num\" class=\"headerlink\" title=\"dynamic dev num\"></a>dynamic dev num</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">alloc_chrdev_region</span><span class=\"params\">(<span class=\"type\">dev_t</span>* dev, <span class=\"type\">unsigned</span> baseminor, <span class=\"type\">unsigned</span> count, <span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">unregister_chrdev_region</span><span class=\"params\">(<span class=\"type\">dev_t</span> from, <span class=\"type\">unsigned</span> count)</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"printk\"><a href=\"#printk\" class=\"headerlink\" title=\"printk\"></a>printk</h2><p>printk有八个打印等级，如果不指名，默认采用等级4</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#inlcude/linux/kern_levels.h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_EMERG\tKERN_SOH <span class=\"string\">&quot;0&quot;</span>\t<span class=\"comment\">/* system is unusable */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_ALERT\tKERN_SOH <span class=\"string\">&quot;1&quot;</span>\t<span class=\"comment\">/* action must be taken immediately */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_CRIT\tKERN_SOH <span class=\"string\">&quot;2&quot;</span>\t<span class=\"comment\">/* critical conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_ERR\tKERN_SOH <span class=\"string\">&quot;3&quot;</span>\t<span class=\"comment\">/* error conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_WARNING\tKERN_SOH <span class=\"string\">&quot;4&quot;</span>\t<span class=\"comment\">/* warning conditions */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_NOTICE\tKERN_SOH <span class=\"string\">&quot;5&quot;</span>\t<span class=\"comment\">/* normal but significant condition */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_INFO\tKERN_SOH <span class=\"string\">&quot;6&quot;</span>\t<span class=\"comment\">/* informational */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> KERN_DEBUG\tKERN_SOH <span class=\"string\">&quot;7&quot;</span>\t<span class=\"comment\">/* debug-level messages */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">printk(KERN_EMERG <span class=\"string\">&quot;gsmi:Log Shutdown Reason\\n&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>在printk.h中存在宏定义 CONSOLE_LOGLEVEL_DEFAULT 当打印等级比该值高，才会显示在终端上</p>","path":"2023/02/24/linux驱动开发(1)/","permalink":"http://chengs.run/2023/02/24/linux%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91(1)/","tags":[{"name":"linux","_id":"cm833960c0002i0q66dwgd8wg","slug":"linux","path":"tags/linux/","permalink":"http://chengs.run/tags/linux/","length":13},{"name":"linux驱动开发","_id":"cm833960x001ci0q69qnhfuvg","slug":"linux驱动开发","path":"tags/linux驱动开发/","permalink":"http://chengs.run/tags/linux%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/","length":4}],"categories":[],"prev":{"title":"linux驱动开发(2)","date":"2023-02-24T21:12:32.006Z","slug":"linux驱动开发(2)","published":true,"updated":"2023-02-24T21:12:32.006Z","_id":"cm833960v0018i0q66sth4xgu","layout":"post","photos":[],"excerpt":"<p>字符设备驱动开发基础</p>","path":"2023/02/24/linux驱动开发(2)/","permalink":"http://chengs.run/2023/02/24/linux%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91(2)/","__post":true},"next":{"title":"BusyBox自建根文件系统完善","date":"2023-02-24T03:57:20.018Z","slug":"BusyBox自建根文件系统完善","published":true,"updated":"2023-09-09T09:53:08.022Z","_id":"cm83396070000i0q60qek8y33","layout":"post","photos":[],"excerpt":"<p>BusyBox自建根文件系统完善</p>","path":"2023/02/24/BusyBox自建根文件系统完善/","permalink":"http://chengs.run/2023/02/24/BusyBox%E8%87%AA%E5%BB%BA%E6%A0%B9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%8C%E5%96%84/","__post":true},"__post":true}